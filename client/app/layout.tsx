import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AuthProvider } from "@/context/authContext";
import { getAxiosInstance, getCookie } from "@/utils/axiosInstance";
import { User } from "@/lib/types";
import { Header } from "@/components/Header";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  let currentUser: User | null = null;
  const axios = getAxiosInstance();

  try {
    const response = await axios.get("/api/users/current-user", {
      headers: {
        Cookie: await getCookie(),
      },
    });
    const data = await response.data;

    if (response.status === 200 && data.currentUser) {
      currentUser = {
        id: data.currentUser.id,
        email: data.currentUser.email,
      };
    }
  } catch (err) {
    console.error("Error fetching current user:", err);
  }

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AuthProvider initialValue={currentUser}>
          <>
            <Header />
            {children}
          </>
        </AuthProvider>
      </body>
    </html>
  );
}
